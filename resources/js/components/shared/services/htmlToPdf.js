import jsPDF from "jspdf";
import html2canvas from "html2canvas";
export default {
    downloadPDF(ele, pdfName) {
        let el = document.getElementById(ele); // Get the content you want to export through getElementByid
        let eleW = el.offsetWidth; // Get the width of the container
        let eleH = el.offsetHeight; // Get high of the container

        let eleOffsetTop = el.offsetTop; // Get the distance from the container to the top of the document
        let eleOffsetLeft = el.offsetLeft; // Get the left distance of the container to the document
        var canvas = document.createElement("canvas");
        var abs = 0;
        let win_in =
            document.documentElement.clientWidth || document.body.clientWidth; // Get the width of the current visual window (not including scroll bar)
        let win_out = window.innerWidth; // Get the width of the current window (including scroll bar)

        if (win_out > win_in) {
            abs = (win_out - win_in) / 2; // Get half of the width of the scroll bar
        }
        canvas.width = eleW * 2; // Both the canvas wide && high amplifier
        canvas.height = eleH * 2;

        var context = canvas.getContext("2d");
        context.scale(2, 2);
        context.translate(-eleOffsetLeft - abs, -eleOffsetTop);

        html2canvas(el, {
            dpi: 96, // resolution
            scale: 2, // Set zoom
            useCORS: true, // Allows the Canvas to request an external link image across domain to allow cross-domain requests. ,
            backgroundColor: "#ffffff",
            logging: false // Print the log, you can do not think that False
        }).then(canvas => {
            // el.setAttribute("crossOrigin",'anonymous');
            var contentWidth = canvas.width;
            var contentHeight = canvas.height;
            // One page PDF shows the CANVAS height generated by the HTML page;
            var pageHeight = (contentWidth / 592.28) * 841.89;
            // Do not generate the HTML page height of the PDF
            var leftHeight = contentHeight;
            // page offset
            var position = 0;
            // A4 paper size [595.28, 841.89], the HTML page generated by Canvas in PDF is high in PDF
            var imgWidth = 595.28;
            var imgHeight = (595.28 / contentWidth) * contentHeight;
            let pageData = canvas.toDataURL("image/jpeg", 1.0);
            var pdf = new jsPDF("", "pt", "a4");

            if (leftHeight < pageHeight) {
                // Set in PDF.AddImage (PageData, 'JPEG', left, upper, width, height);
                pdf.addImage(pageData, "JPEG", 0, 0, imgWidth, imgHeight);
            } else {
                // Page
                while (leftHeight > 0) {
                    pdf.addImage(
                        pageData,
                        "JPEG",
                        0,
                        position,
                        imgWidth,
                        imgHeight
                    );
                    leftHeight -= pageHeight;
                    position -= 841.89;
                    // Avoid adding a blank page
                    if (leftHeight > 0) {
                        pdf.addPage();
                    }
                }
            }
            // Ventive generation
            pdf.save(pdfName);
        });
    }
};
